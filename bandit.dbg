---> int main(int, char**) /media/Infinity/dev/BasicGames/b2c/b2c.cpp[2104]
    Opened input file
    Opened vars file
    Parsing ...
    Processing line 1!
    (LEX)TK_Integer=1000 YYSTATE=0
    Processing line 2!
    (LEX)TK_Integer=1010 YYSTATE=0
    Processing line 3!
    (LEX)TK_Integer=1020 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"ARE INTRUCTIONS REQUIRED?"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="ARE INTRUCTIONS REQUIRED?"
    Processing line 4!
    (LEX)TK_Integer=1030 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"TYPE EITHER 'YES' OR 'NO'"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="TYPE EITHER 'YES' OR 'NO'"
    Processing line 5!
    (LEX)TK_Integer=1040 YYSTATE=0
    (LEX)TK_Input='INPUT'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=L$
    (normal)basiclval.stype='L$'
    Processing line 6!
    (LEX)TK_Integer=1050 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=L$
    (normal)basiclval.stype='L$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"YES"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1090 YYSTATE=3
    Processing line 7!
    (LEX)TK_Integer=1060 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=L$
    (normal)basiclval.stype='L$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"NO"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1160 YYSTATE=3
    Processing line 8!
    (LEX)TK_Integer=1070 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"INVALID COMMAND"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="INVALID COMMAND"
    Processing line 9!
    (LEX)TK_Integer=1080 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1020 YYSTATE=3
    Processing line 10!
    (LEX)TK_Integer=1090 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"SCORING IS SIMPLE; 3 ORANGES, LEMONS OR"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="SCORING IS SIMPLE; 3 ORANGES, LEMONS OR"
    Processing line 11!
    (LEX)TK_Integer=1100 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"BANANAS EARN $10. 3 CHERRIES EARN $90."'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="BANANAS EARN $10. 3 CHERRIES EARN $90."
    Processing line 12!
    (LEX)TK_Integer=1110 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"IF THE FIRST FRUIT IS AN APPLE, YOU EARN $2"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="IF THE FIRST FRUIT IS AN APPLE, YOU EARN $2"
    Processing line 13!
    (LEX)TK_Integer=1120 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"IF THE FIRST AND SECOND ARE APPLES, YOU EARN $3."'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="IF THE FIRST AND SECOND ARE APPLES, YOU EARN $3."
    Processing line 14!
    (LEX)TK_Integer=1130 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"IF THE LAST FRUIT IS A CHERRY AND THE"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="IF THE LAST FRUIT IS A CHERRY AND THE"
    Processing line 15!
    (LEX)TK_Integer=1140 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"OTHER TWO ARE THE SAME BUT NOT APPLES YOU"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="OTHER TWO ARE THE SAME BUT NOT APPLES YOU"
    Processing line 16!
    (LEX)TK_Integer=1150 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"EARN $10. EACH TURN COSTS $1. GOOD LUCK"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="EARN $10. EACH TURN COSTS $1. GOOD LUCK"
    Processing line 17!
    (LEX)TK_Integer=1160 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_Integer=0 YYSTATE=3
    Processing line 18!
    (LEX)TK_Integer=1170 YYSTATE=0
    (LEX)TK_Print='PRINT'
    Processing line 19!
    (LEX)TK_Integer=1180 YYSTATE=0
    (LEX)TK_Gosub='GOSUB'
    (LEX)TK_Integer=1580 YYSTATE=3
    Processing line 20!
    (LEX)TK_Integer=1190 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S1
    (normal)basiclval.stype='S1'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Processing line 21!
    (LEX)TK_Integer=1200 YYSTATE=0
    (LEX)TK_Gosub='GOSUB'
    (LEX)TK_Integer=1580 YYSTATE=3
    Processing line 22!
    (LEX)TK_Integer=1210 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S2
    (normal)basiclval.stype='S2'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Processing line 23!
    (LEX)TK_Integer=1220 YYSTATE=0
    (LEX)TK_Gosub='GOSUB'
    (LEX)TK_Integer=1580 YYSTATE=3
    Processing line 24!
    (LEX)TK_Integer=1230 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S3
    (normal)basiclval.stype='S3'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Processing line 25!
    (LEX)TK_Integer=1240 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S1
    (normal)basiclval.stype='S1'
    Processing line 26!
    (LEX)TK_Integer=1250 YYSTATE=0
    (LEX)TK_Gosub='GOSUB'
    (LEX)TK_Integer=1600 YYSTATE=3
    Processing line 27!
    (LEX)TK_Integer=1260 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S1$
    (normal)basiclval.stype='S1$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Processing line 28!
    (LEX)TK_Integer=1270 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S2
    (normal)basiclval.stype='S2'
    Processing line 29!
    (LEX)TK_Integer=1280 YYSTATE=0
    (LEX)TK_Gosub='GOSUB'
    (LEX)TK_Integer=1600 YYSTATE=3
    Processing line 30!
    (LEX)TK_Integer=1290 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S2$
    (normal)basiclval.stype='S2$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Processing line 31!
    (LEX)TK_Integer=1300 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S3
    (normal)basiclval.stype='S3'
    Processing line 32!
    (LEX)TK_Integer=1310 YYSTATE=0
    (LEX)TK_Gosub='GOSUB'
    (LEX)TK_Integer=1600 YYSTATE=3
    Processing line 33!
    (LEX)TK_Integer=1320 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S3$
    (normal)basiclval.stype='S3$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Processing line 34!
    (LEX)TK_Integer=1330 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S1$
    (normal)basiclval.stype='S1$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"CHERRY"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1370 YYSTATE=3
    Processing line 35!
    (LEX)TK_Integer=1340 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S1$
    (normal)basiclval.stype='S1$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"APPLE"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1410 YYSTATE=3
    Processing line 36!
    (LEX)TK_Integer=1350 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S1$
    (normal)basiclval.stype='S1$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S2$
    (normal)basiclval.stype='S2$'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1430 YYSTATE=3
    Processing line 37!
    (LEX)TK_Integer=1360 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1450 YYSTATE=3
    Processing line 38!
    (LEX)TK_Integer=1370 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S1$
    (normal)basiclval.stype='S1$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S2$
    (normal)basiclval.stype='S2$'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1390 YYSTATE=3
    Processing line 39!
    (LEX)TK_Integer=1380 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1450 YYSTATE=3
    Processing line 40!
    (LEX)TK_Integer=1390 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S2$
    (normal)basiclval.stype='S2$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S3$
    (normal)basiclval.stype='S3$'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1470 YYSTATE=3
    Processing line 41!
    (LEX)TK_Integer=1400 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1450 YYSTATE=3
    Processing line 42!
    (LEX)TK_Integer=1410 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S1$
    (normal)basiclval.stype='S1$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S2$
    (normal)basiclval.stype='S2$'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1490 YYSTATE=3
    Processing line 43!
    (LEX)TK_Integer=1420 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1510 YYSTATE=3
    Processing line 44!
    (LEX)TK_Integer=1430 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S2$
    (normal)basiclval.stype='S2$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S3$
    (normal)basiclval.stype='S3$'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1530 YYSTATE=3
    Processing line 45!
    (LEX)TK_Integer=1440 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S3$
    (normal)basiclval.stype='S3$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"CHERRY"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1530 YYSTATE=3
    Processing line 46!
    (LEX)TK_Integer=1450 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x45'-'
    (LEX)TK_Integer=1 YYSTATE=3
    Processing line 47!
    (LEX)TK_Integer=1460 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1540 YYSTATE=3
    Processing line 48!
    (LEX)TK_Integer=1470 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x43'+'
    (LEX)TK_Integer=89 YYSTATE=3
    Processing line 49!
    (LEX)TK_Integer=1480 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1540 YYSTATE=3
    Processing line 50!
    (LEX)TK_Integer=1490 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x43'+'
    (LEX)TK_Integer=2 YYSTATE=3
    Processing line 51!
    (LEX)TK_Integer=1500 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1540 YYSTATE=3
    Processing line 52!
    (LEX)TK_Integer=1510 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x43'+'
    (LEX)TK_Integer=1 YYSTATE=3
    Processing line 53!
    (LEX)TK_Integer=1520 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1540 YYSTATE=3
    Processing line 54!
    (LEX)TK_Integer=1530 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=J
    (normal)basiclval.stype='J'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x43'+'
    (LEX)TK_Integer=9 YYSTATE=3
    Processing line 55!
    (LEX)TK_Integer=1540 YYSTATE=0
    (LEX)TK_Print='PRINT'
    Processing line 56!
    (LEX)TK_Integer=1550 YYSTATE=0
    (LEX)TK_Print='PRINT'
    Got some space characters in a print line.
        printfield = 1
        lc         = 'S'
        yytext     = ' '
        LastToken  = '303'
    (LEX)TK_SName(PrintStmt)=S1$
    (LEX)NOTYPE<INITIAL>(.)=(1)0x59';'
        printfield = 2
        yytext     = '" "'
        LastToken  = '59'
    (LEX)TK_QuoteString(PRINTSTMT)=" "
    (LEX)NOTYPE<INITIAL>(.)=(1)0x59';'
    (LEX)TK_SName(PrintStmt)=S2$
    (LEX)NOTYPE<INITIAL>(.)=(1)0x59';'
        printfield = 4
        yytext     = '" "'
        LastToken  = '59'
    (LEX)TK_QuoteString(PRINTSTMT)=" "
    (LEX)NOTYPE<INITIAL>(.)=(1)0x59';'
    (LEX)TK_SName(PrintStmt)=S3$
    Processing line 57!
    (LEX)TK_Integer=1560 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"YOUR TOTAL EARNINGS ARE NOW $"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="YOUR TOTAL EARNINGS ARE NOW $"
    (LEX)NOTYPE<INITIAL>(.)=(1)0x59';'
    (LEX)TK_Name(PrintStmt)=J
    Processing line 58!
    (LEX)TK_Integer=1570 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1710 YYSTATE=3
    Processing line 59!
    Processing line 60!
    (LEX)TK_Integer=1580 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_Integer=1 YYSTATE=3
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x43'+'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=INT
    (normal)basiclval.stype='INT'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x40'('
    (LEX)TK_Integer=5 YYSTATE=3
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x42'*'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=RND
    (normal)basiclval.stype='RND'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x41')'
    Processing line 61!
    (LEX)TK_Integer=1590 YYSTATE=0
    (LEX)TK_Return='RETURN'
    Processing line 62!
    Processing line 63!
    (LEX)TK_Integer=1600 YYSTATE=0
    (LEX)TK_On='ON'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_Name(normal6)=S
    (normal)basiclval.stype='S'
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1610 YYSTATE=3
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x44','
    (LEX)TK_Integer=1630 YYSTATE=3
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x44','
    (LEX)TK_Integer=1650 YYSTATE=3
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x44','
    (LEX)TK_Integer=1670 YYSTATE=3
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x44','
    (LEX)TK_Integer=1690 YYSTATE=3
    Processing line 64!
    (LEX)TK_Integer=1610 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"CHERRY"'
    Processing line 65!
    (LEX)TK_Integer=1620 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1700 YYSTATE=3
    Processing line 66!
    (LEX)TK_Integer=1630 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"APPLE"'
    Processing line 67!
    (LEX)TK_Integer=1640 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1700 YYSTATE=3
    Processing line 68!
    (LEX)TK_Integer=1650 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"LEMON"'
    Processing line 69!
    (LEX)TK_Integer=1660 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1700 YYSTATE=3
    Processing line 70!
    (LEX)TK_Integer=1670 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"ORANGE"'
    Processing line 71!
    (LEX)TK_Integer=1680 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1700 YYSTATE=3
    Processing line 72!
    (LEX)TK_Integer=1690 YYSTATE=0
    (LEX)TK_Let='LET'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=S$
    (normal)basiclval.stype='S$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"BANANA"'
    Processing line 73!
    (LEX)TK_Integer=1700 YYSTATE=0
    (LEX)TK_Return='RETURN'
    Processing line 74!
    Processing line 75!
    (LEX)TK_Integer=1710 YYSTATE=0
    (LEX)TK_Print='PRINT'
    Processing line 76!
    (LEX)TK_Integer=1720 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"TO CONTINUE TYPE 'Y', IF NOT TYPE 'N'"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="TO CONTINUE TYPE 'Y', IF NOT TYPE 'N'"
    Processing line 77!
    (LEX)TK_Integer=1730 YYSTATE=0
    (LEX)TK_Input='INPUT'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=Z$
    (normal)basiclval.stype='Z$'
    Processing line 78!
    (LEX)TK_Integer=1740 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=Z$
    (normal)basiclval.stype='Z$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"Y"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1790 YYSTATE=3
    Processing line 79!
    (LEX)TK_Integer=1750 YYSTATE=0
    (LEX)TK_If='IF'
    isym=-1 name='(null)' sz=0 token=0
    (LEX)TK_SName(normal1)=Z$
    (normal)basiclval.stype='Z$'
    Next State=CMD (still)
    (LEX)NOTYPE<CMD>(.)=(1)0x61'='
    (LEX)TK_QuoteString='"N"'
    (LEX)TK_Then='THEN'
    (LEX)TK_Integer=1770 YYSTATE=3
    Processing line 80!
    (LEX)TK_Integer=1760 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"INVALID RESPONSE"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="INVALID RESPONSE"
    Processing line 81!
    (LEX)TK_Integer=1770 YYSTATE=0
    (LEX)TK_Print='PRINT'
        printfield = 1
        yytext     = '"ONE-ARM-BANDIT SAYS GOOD-BYE"'
        LastToken  = '303'
    (LEX)TK_QuoteString(PRINTSTMT)="ONE-ARM-BANDIT SAYS GOOD-BYE"
    Processing line 82!
    (LEX)TK_Integer=1780 YYSTATE=0
    (LEX)TK_Stop='STOP'
    Processing line 83!
    (LEX)TK_Integer=1790 YYSTATE=0
    (LEX)TK_Print='PRINT'
    Processing line 84!
    (LEX)TK_Integer=1800 YYSTATE=0
    (LEX)TK_Goto='GOTO'
    (LEX)TK_Integer=1180 YYSTATE=3
    Processing line 85!
    (LEX)TK_Integer=1810 YYSTATE=0
    (LEX)TK_End='END'
    Processing line 86!
    Sorting Symbols ...
    Grab Labels ...
    Update Vars ...
    Mark All Routines ...
    Display Initial Code ...
    TStatement::_RtnCount-1=2
    Fixup targets that are on comments.
    FixupTargets() stmt:'1000 REM THIS PROGRAM SIMULATES THE MECHANICAL'
    FixupTargets() stmt:'1010 REM THREE WHEEL ONE-ARM-BANDIT'
    FixupTargets() stmt:'1020 PRINT"ARE INTRUCTIONS REQUIRED?"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1030 PRINT"TYPE EITHER 'YES' OR 'NO'"'
    FixupTargets() stmt:'1040 INPUT L$'
    FixupTargets() stmt:'1050 IF L$="YES" THEN 1090'
    FixupTargets() stmt:'1060 IF L$="NO" THEN 1160'
    FixupTargets() stmt:'1070 PRINT"INVALID COMMAND"'
    FixupTargets() stmt:'1080 GOTO 1020'
    FixupTargets() stmt:'1090 PRINT"SCORING IS SIMPLE; 3 ORANGES, LEMONS OR"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1100 PRINT"BANANAS EARN $10. 3 CHERRIES EARN $90."'
    FixupTargets() stmt:'1110 PRINT"IF THE FIRST FRUIT IS AN APPLE, YOU EARN $2"'
    FixupTargets() stmt:'1120 PRINT"IF THE FIRST AND SECOND ARE APPLES, YOU EARN $3."'
    FixupTargets() stmt:'1130 PRINT"IF THE LAST FRUIT IS A CHERRY AND THE"'
    FixupTargets() stmt:'1140 PRINT"OTHER TWO ARE THE SAME BUT NOT APPLES YOU"'
    FixupTargets() stmt:'1150 PRINT"EARN $10. EACH TURN COSTS $1. GOOD LUCK"'
    FixupTargets() stmt:'1160 LET J=0'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1170 PRINT'
    FixupTargets() stmt:'1180 GOSUB 1580'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1190 LET S1=S'
    FixupTargets() stmt:'1200 GOSUB 1580'
    FixupTargets() stmt:'1210 LET S2=S'
    FixupTargets() stmt:'1220 GOSUB 1580'
    FixupTargets() stmt:'1230 LET S3=S'
    FixupTargets() stmt:'1240 LET S=S1'
    FixupTargets() stmt:'1250 GOSUB 1600'
    FixupTargets() stmt:'1260 LET S1$=S$'
    FixupTargets() stmt:'1270 LET S=S2'
    FixupTargets() stmt:'1280 GOSUB 1600'
    FixupTargets() stmt:'1290 LET S2$=S$'
    FixupTargets() stmt:'1300 LET S=S3'
    FixupTargets() stmt:'1310 GOSUB 1600'
    FixupTargets() stmt:'1320 LET S3$=S$'
    FixupTargets() stmt:'1330 IF S1$="CHERRY" THEN 1370'
    FixupTargets() stmt:'1340 IF S1$="APPLE" THEN 1410'
    FixupTargets() stmt:'1350 IF S1$=S2$ THEN 1430'
    FixupTargets() stmt:'1360 GOTO 1450'
    FixupTargets() stmt:'1370 IF S1$=S2$ THEN 1390'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1380 GOTO 1450'
    FixupTargets() stmt:'1390 IF S2$=S3$ THEN 1470'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1400 GOTO 1450'
    FixupTargets() stmt:'1410 IF S1$=S2$ THEN 1490'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1420 GOTO 1510'
    FixupTargets() stmt:'1430 IF S2$=S3$ THEN 1530'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1440 IF S3$="CHERRY" THEN 1530'
    FixupTargets() stmt:'1450 LET J=J-1'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1460 GOTO 1540'
    FixupTargets() stmt:'1470 LET J=J+89'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1480 GOTO 1540'
    FixupTargets() stmt:'1490 LET J=J+2'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1500 GOTO 1540'
    FixupTargets() stmt:'1510 LET J=J+1'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1520 GOTO 1540'
    FixupTargets() stmt:'1530 LET J=J+9'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1540 PRINT'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1550 PRINT S1$;" ";S2$;" ";S3$'
    FixupTargets() stmt:'1560 PRINT"YOUR TOTAL EARNINGS ARE NOW $";J'
    FixupTargets() stmt:'1570 GOTO 1710'
    FixupTargets() stmt:'1580 LET S=1+INT(5*RND)'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1590 RETURN'
    FixupTargets() stmt:'1600 ON S GOTO 1610,1630,1650,1670,1690'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1610 LET S$="CHERRY"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1620 GOTO 1700'
    FixupTargets() stmt:'1630 LET S$="APPLE"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1640 GOTO 1700'
    FixupTargets() stmt:'1650 LET S$="LEMON"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1660 GOTO 1700'
    FixupTargets() stmt:'1670 LET S$="ORANGE"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1680 GOTO 1700'
    FixupTargets() stmt:'1690 LET S$="BANANA"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1700 RETURN'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1710 PRINT'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1720 PRINT"TO CONTINUE TYPE 'Y', IF NOT TYPE 'N'"'
    FixupTargets() stmt:'1730 INPUT Z$'
    FixupTargets() stmt:'1740 IF Z$="Y" THEN 1790'
    FixupTargets() stmt:'1750 IF Z$="N" THEN 1770'
    FixupTargets() stmt:'1760 PRINT"INVALID RESPONSE"'
    FixupTargets() stmt:'1770 PRINT"ONE-ARM-BANDIT SAYS GOOD-BYE"'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1780 STOP'
    FixupTargets() stmt:'1790 PRINT'
      Target is GOSUB or GOTO
    FixupTargets() stmt:'1800 GOTO 1180'
    FixupTargets() stmt:'1810 END'
    Finished FixupTargets
    Split Overlapping Subroutines ...
    Straighten Overlapping Subroutines ...
    Renumber Source ...
    Display Empty Code Ranges ...
    Display Symbol Table ...
    Display of final 'clean' BASIC listing ...
    TStatement::_RtnCount-1=2
    Finished!!!
<--- int main(int, char**) /media/Infinity/dev/BasicGames/b2c/b2c.cpp[2210]
